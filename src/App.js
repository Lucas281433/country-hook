import React, { useState, useEffect } from "react";
import axios from "axios";
import { Button, Stack, TextField, Typography } from "@mui/material";

/**
 * A custom React hook for managing the state and behavior of an input field.
 *
 * @param {string} type - The type of the input field (e.g., "text", "number").
 * @returns {object} An object containing:
 *   - type: The type of the input field.
 *   - value: The current value of the input field.
 *   - onChange: A function to update the value when the input changes.
 */
const useField = (type) => {
  const [value, setValue] = useState("");

/**
 * Updates the state with the new value from the input field.
 *
 * @param {object} event - The event object generated by the input field change.
 * @param {object} event.target - The target element of the event.
 * @param {string} event.target.value - The new value of the input field.
 */
  const onChange = (event) => {
    setValue(event.target.value);
  };

  return {
    type,
    value,
    onChange,
  };
};

/**
 * A custom React hook for fetching country data based on the provided name.
 *
 * @param {string} name - The name of the country to fetch data for.
 * @returns {object|null|string} The country data object if found, or 'not found' if the country does not exist, 
 * or null if no name is provided.
 */
const useCountry = (name) => {
  const [country, setCountry] = useState(null);

  useEffect(() => {
    if (name === "") {
      setCountry(null);
      return;
    }

    axios.get(`https://studies.cs.helsinki.fi/restcountries/api/name/${name}`).then((response) => {  
        if (response.data) {
          setCountry(response.data);
        }
      }).catch(() => {
        setCountry('not found')
      })
    }, [name]);
    
    return country;
};

/**
 * A React component for rendering a country's details, given the country object.
 * 
 * @param {object} country - The country object to render.
 * @returns {ReactElement} The rendered country details.
 */

const Country = ({ country }) => {
  if (!country) {
    return null;
  }

  if (!country.name || !country.name.common ) {
    return <div>not found...</div>;
  }

  if (country === 'not found') {
    return <div>not found...</div>;
  }

  return (
    <Stack direction="column" justifyContent="center" alignItems="center" gap={2}>
      <Typography variant="h2">{country.name.common} </Typography>
      <div><strong>Capital:</strong> {country.capital} </div>
      <div><strong>Population:</strong> {country.population}</div>
      <img
        src={country.flags.png}
        height="100"
        alt={`flag of ${country.name.common}`}
      />
    </Stack>
  );
};

/**
 * The main React component for the application.
 *
 * @returns {ReactElement} The rendered application component.
 */
const App = () => {
  const nameInput = useField("text");
  const [name, setName] = useState("");
  const country = useCountry(name);

/**
 * Handles form submission event to fetch the country data.
 *
 * @param {object} e - The event object generated by the form submission.
 */
  const fetch = (e) => {
    e.preventDefault();
    setName(nameInput.value);
  };

  return (
    <Stack direction="column" justifyContent="center" alignItems="center" gap={2} sx={{ minHeight: "100vh"}}>
      <form onSubmit={fetch}>
        <TextField size="small" label="Find Country" {...nameInput} />
        <Button variant="contained" type="submit">find</Button>
      </form>

      <Country country={country} />
    </Stack>
  );
};

export default App;
